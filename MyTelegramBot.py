import os
from telethon import TelegramClient, events
from aiohttp import web
import asyncio

# üîê –¢–≤–æ–∏ –¥–∞–Ω–Ω—ã–µ
api_id = 28262196
api_hash = '3312838d662c74183e9adacb005bb2fc'
session_name = 'my_main_account'

# üîë –ö–ª—é—á–µ–≤—ã–µ —Å–ª–æ–≤–∞
keywords = ['–Ω–æ—É—Ç', '–Ω–æ—É—Ç–±—É–∫', '–º–∞–∫', '–º–∞–∫ –±—É–∫', '–º–∞–∫–±—É–∫', 'mac', 'mac book', 'macbook']

# üö´ –°–ª–æ–≤–∞-–∏—Å–∫–ª—é—á–µ–Ω–∏—è
stop_words = ['—Ä–∞–±–æ—Ç–∞', '—Ä–∞–±–æ—Ç—ã', 'apple macbook', 'ipad']

# üì¨ –ö—É–¥–∞ –ø–µ—Ä–µ—Å—ã–ª–∞—Ç—å
target_user = 'WeDo_Batumi'  # –±–µ–∑ @

# üåê –ü–æ—Ä—Ç –¥–ª—è Render
PORT = int(os.environ.get('PORT', 8000))

# ü§ñ –ö–ª–∏–µ–Ω—Ç Telethon
client = TelegramClient(session_name, api_id, api_hash)

# üåç –ü—Ä–æ—Å—Ç–æ–π –≤–µ–±-—Å–µ—Ä–≤–µ—Ä –¥–ª—è Render
app = web.Application()
app.router.add_get('/', lambda request: web.Response(text="Bot is running"))

async def start_web():
    runner = web.AppRunner(app)
    await runner.setup()
    site = web.TCPSite(runner, '0.0.0.0', PORT)
    await site.start()
    print(f"‚úÖ Web server started on port {PORT}")

# üì© –û–±—Ä–∞–±–æ—Ç–∫–∞ –Ω–æ–≤—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π
@client.on(events.NewMessage(chats=None))  # –°–ª—É—à–∞–µ–º –≤—Å–µ –¥–∏–∞–ª–æ–≥–∏, –≥–¥–µ –µ—Å—Ç—å –∫–ª–∏–µ–Ω—Ç
async def handler(event):
    message_text = event.message.message or ""

    print("üì• –ü–æ–ª—É—á–µ–Ω–æ —Å–æ–æ–±—â–µ–Ω–∏–µ:", message_text[:100])
    print("üì° –ò–∑ —á–∞—Ç–∞:", getattr(event.chat, 'title', 'Unknown'))
    print("üî¢ Chat ID:", event.chat_id)
    print("üîó Username:", getattr(event.chat, 'username', '–Ω–µ—Ç username'))

    # –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–æ–ø-—Å–ª–æ–≤
    if any(stop_word.lower() in message_text.lower() for stop_word in stop_words):
        print("‚õîÔ∏è –°—Ç–æ–ø-—Å–ª–æ–≤–æ –Ω–∞–π–¥–µ–Ω–æ, –ø—Ä–æ–ø—É—Å–∫–∞–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ.")
        return

    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–ª—é—á–µ–≤—ã—Ö —Å–ª–æ–≤
    if any(keyword.lower() in message_text.lower() for keyword in keywords):
        try:
            # –ü–æ–ª—É—á–∞–µ–º —Å—Å—ã–ª–∫—É (–µ—Å–ª–∏ –≤–æ–∑–º–æ–∂–Ω–æ)
            try:
                link = await event.message.get_permalink()
            except Exception as e:
                print("‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å —Å—Å—ã–ª–∫—É:", e)
                link = None

            full_text = message_text.strip()
            if link:
                full_text += f"\n\nüëâ {link}"
            else:
                full_text += "\n\n(—Å—Å—ã–ª–∫–∞ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∞)"

            # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –≤ —É–∫–∞–∑–∞–Ω–Ω—ã–π –∫–∞–Ω–∞–ª
            await client.send_message(entity=target_user, message=full_text)

            print("‚úÖ –°–æ–æ–±—â–µ–Ω–∏–µ –ø–µ—Ä–µ—Å–ª–∞–Ω–æ.")
        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ: {e}")

# üöÄ –ó–∞–ø—É—Å–∫
async def main():
    print("üöÄ –ë–æ—Ç –∑–∞–ø—É—â–µ–Ω. –û–∂–∏–¥–∞–µ—Ç –Ω–æ–≤—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è...")
    await start_web()
    await client.run_until_disconnected()

with client:
    client.loop.run_until_complete(main())
