import os
from telethon import TelegramClient, events
from aiohttp import web
import asyncio

# üîê –¢–≤–æ–∏ –¥–∞–Ω–Ω—ã–µ
api_id = 28262196
api_hash = '3312838d662c74183e9adacb005bb2fc'
session_name = 'my_main_account'

# üîë –ö–ª—é—á–µ–≤—ã–µ —Å–ª–æ–≤–∞
keywords = ['–Ω–æ—É—Ç', '–Ω–æ—É—Ç–±—É–∫', '–º–∞–∫', '–º–∞–∫ –±—É–∫', '–º–∞–∫–±—É–∫', 'mac', 'mac book', 'macbook']

# üö´ –°–ª–æ–≤–∞-–∏—Å–∫–ª—é—á–µ–Ω–∏—è (–ø—Ä–∏ –∏—Ö –Ω–∞–ª–∏—á–∏–∏ —Å–æ–æ–±—â–µ–Ω–∏–µ –ù–ï –ø–µ—Ä–µ—Å—ã–ª–∞–µ—Ç—Å—è)
stop_words = ['—Ä–∞–±–æ—Ç–∞', '—Ä–∞–±–æ—Ç—ã', 'apple macbook', 'ipad']

# üì¨ –ö—É–¥–∞ –ø–µ—Ä–µ—Å—ã–ª–∞—Ç—å
target_user = 'WeDo_Batumi'  # –±–µ–∑ @

# –ü–æ–ª—É—á–∞–µ–º –ø–æ—Ä—Ç –∏–∑ –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π –æ–∫—Ä—É–∂–µ–Ω–∏—è Render (–µ—Å–ª–∏ –Ω–µ—Ç ‚Äî 8000)
PORT = int(os.environ.get('PORT', 8000))

client = TelegramClient(session_name, api_id, api_hash)

# –í–µ–±-—Å–µ—Ä–≤–µ—Ä, —á—Ç–æ–±—ã Render –≤–∏–¥–µ–ª –æ—Ç–∫—Ä—ã—Ç—ã–π –ø–æ—Ä—Ç
app = web.Application()
app.router.add_get('/', lambda request: web.Response(text="Bot is running"))

async def start_web():
    runner = web.AppRunner(app)
    await runner.setup()
    site = web.TCPSite(runner, '0.0.0.0', PORT)
    await site.start()
    print(f"Web server started on port {PORT}")

@client.on(events.NewMessage(chats=None))  # None ‚Äî —Å–ª—É—à–∞–µ–º –≤—Å–µ —á–∞—Ç—ã
async def handler(event):
    message_text = event.message.message or ""

    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç–æ–ø-—Å–ª–æ–≤–∞ ‚Äî –µ—Å–ª–∏ –µ—Å—Ç—å, –≤—ã—Ö–æ–¥–∏–º
    if any(stop_word.lower() in message_text.lower() for stop_word in stop_words):
        print("–°–æ–æ–±—â–µ–Ω–∏–µ —Å–æ–¥–µ—Ä–∂–∏—Ç —Å—Ç–æ–ø-—Å–ª–æ–≤–∞, –ø—Ä–æ–ø—É—Å–∫–∞–µ–º")
        return

    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–ª—é—á–µ–≤—ã–µ —Å–ª–æ–≤–∞
    if any(keyword.lower() in message_text.lower() for keyword in keywords):
        try:
            chat = await event.get_chat()
            if hasattr(chat, 'username') and chat.username:
                # –§–æ—Ä–º–∏—Ä—É–µ–º —Å—Å—ã–ª–∫—É –Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏–µ
                message_link = f"https://t.me/{chat.username}/{event.message.id}"
                await client.send_message(target_user, f"üîó [–û—Ç–∫—Ä—ã—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ]({message_link})", link_preview=False)
                print(f"–°—Å—ã–ª–∫–∞ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞: {message_link}")
            else:
                print("–ù–µ–≤–æ–∑–º–æ–∂–Ω–æ —Å–æ–∑–¥–∞—Ç—å —Å—Å—ã–ª–∫—É ‚Äî —É —á–∞—Ç–∞ –Ω–µ—Ç username.")
        except Exception as e:
            print(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ —Å–æ–æ–±—â–µ–Ω–∏—è: {e}")

async def main():
    print("–ë–æ—Ç –∑–∞–ø—É—â–µ–Ω. –û–∂–∏–¥–∞–µ—Ç –Ω–æ–≤—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è...")
    # –ó–∞–ø—É—Å–∫–∞–µ–º –≤–µ–±-—Å–µ—Ä–≤–µ—Ä –ø–∞—Ä–∞–ª–ª–µ–ª—å–Ω–æ —Å –∫–ª–∏–µ–Ω—Ç–æ–º
    await start_web()
    await client.run_until_disconnected()

with client:
    client.loop.run_until_complete(main())
